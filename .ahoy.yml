---
ahoyapi: v2

commands:
  up:
    usage: Build project.
    cmd: docker-compose up -d "$@"

  down:
    usage: Delete project (CAUTION).
    cmd: |
      if [ "$1" == "y" ]; then
        docker-compose down
      else
        ahoy confirm "Running this command will destroy your current site, database and build? Are you sure you didn't mean ahoy stop?" &&
        # Run this if confirm returns true
        docker-compose down ||
        # Run this if confirm returns false
        echo "OK, probably a wise choice..."
      fi

  build:
    usage: Build project.
    cmd: docker-compose up -d --build "$@"

  install-site:
    usage: Install a vanilla Wordpress site.
    cmd: |
      ahoy mysql-dump
      docker-compose exec -T cli \
        wp db reset --yes \
          --path=/app/web/wp \
          --url=$LAGOON_ROUTE \
          --allow-root
      docker-compose exec -T cli \
        wp core install \
        --allow-root \
        --url=$LAGOON_ROUTE \
        --title=$HOSTNAME \
        --admin_user=admin \
        --admin_email=admin@example.com \
        --skip-email \
        --path=/app/web/wp

  cli:
    usage: Start a shell inside TEST container.
    cmd: docker-compose exec cli bash

  run:
    usage: Run command inside TEST container.
    cmd: docker-compose exec -T cli bash -c "$@"

  wp:
    usage: Run wp-cli commands in TEST container.
    cmd: docker-compose exec -T cli wp "$@"

  logs:
    usage: Show Docker logs.
    cmd: docker-compose logs "$@"

  ps:
    usage: List running Docker containers.
    cmd: docker-compose ps | grep ${COMPOSE_PROJECT_NAME}

  restart:
    usage: Restart Docker containers.
    cmd: docker-compose restart

  stop:
    usage: Stop Docker containers.
    cmd: docker-compose stop "$@"

  mysql-import:
    usage: Pipe in a sql file.  `ahoy mysql-import local.sql`
    cmd: |
      if [ -e "$@" ] ; then
        docker-compose exec cli bash -c 'wp db reset --yes' &&
        docker-compose exec -T cli bash -c 'wp db query' < "$@"
      else echo "Provided sql file" "$@" "does not exist"
      fi

  mysql-dump:
    usage: Dump data out into a file. `ahoy wp db export local.sql"`
    cmd: docker-compose exec cli bash -c 'wp db export --add-drop-table --path=/app/web "$@"'

  confirm:
    cmd: |
      read -r -p "$@ [y/N] " response
      if [[ $response = y ]]
      then
        true
      else
        false
      fi
    hide: true
